
Ball = Class{}

--#######################################################################################################
--  init function begin

-- declaring x , y , height , width for ball
-- declaring speed for x and y ( dx and dy )
--#######################################################################################################

function Ball : init ( x , y , width , height )

	self.x = x
	self.y = y
	self.width = width
	self.height = height

	self.dx = math.random( 2 ) == 1 and 100 or -100
	self.dy = math.random( -50 , 50 )

end

--#######################################################################################################
--  init function  end
--#######################################################################################################



--#######################################################################################################
--  collide function begin

--  collision with paddel
--#######################################################################################################

function Ball : collide ( paddel )

	if  paddel.x > self.x + self.width  or self.x > paddel.x + paddel.width then
	    return false 
	end
		
	if self.y + self.height < paddel.y or self.y > paddel.y + paddel.height then
		return false 
	end
	
	return true

end

--#######################################################################################################
--  collide function end
--#######################################################################################################



--#######################################################################################################
--  reset function begin

-- reset the value of ball when ball goes out
--#######################################################################################################

function Ball : reset ()

	self.x = VIRTUAL_WIDTH/2
	self.y = VIRTUAL_HEIGHT/2
	self.dx = math.random( 2 ) == 1 and 100 or -100
	self.dy = math.random( -50 , 50 )

end

--#######################################################################################################
--  reset function  end
--#######################################################################################################




--#######################################################################################################
--  update function begin

--  updating position of ball
--#######################################################################################################

function Ball : update ( dt )

	self.x = self.x + self.dx * dt
	self.y = self.y + self.dy * dt

end

--#######################################################################################################
--  reset function end
--#######################################################################################################




--#######################################################################################################
--  render function begin

-- displays ball
--#######################################################################################################

function Ball : render ()

	love.graphics.rectangle( 'fill' , self.x , self.y , self.width , self.height )

end

--#######################################################################################################
--  render function  end
--#######################################################################################################
